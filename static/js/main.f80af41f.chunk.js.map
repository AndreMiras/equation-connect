{"version":3,"sources":["context/provider.tsx","components/ZoneOverview.tsx","components/ZonesOverview.tsx","components/Installation.tsx","components/Installations.tsx","components/Home.tsx","components/Login.tsx","components/Logout.tsx","components/LoginOrLogout.tsx","components/Header.tsx","components/Device.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["anonymousUser","uid","email","isAnonymous","userContextDefault","user","setUser","UserContext","createContext","UserContextProvider","children","useState","Provider","value","ZoneOverview","zone","id","name","type","comfort","eco","temp","power","mode","devices","devicesCount","Object","keys","length","devicesList","map","device","to","Accordion","className","defaultActiveKey","Item","eventKey","Header","Body","toString","JSON","stringify","ZonesOverview","zones","key","Installation","installation","location","latitude","longitude","useOpenWeather","process","lat","lon","lang","unit","data","isLoading","errorMessage","missingApiKeyMessage","Alert","variant","locationLabel","unitsLabels","temperature","windSpeed","showForecast","Installations","installations","setInstallations","useContext","useEffect","a","getInstallations","fetch","Home","Login","setEmail","password","setPassword","onAuthStateChanged","auth","currentUser","onLogin","login","console","error","Form","onSubmit","e","preventDefault","Control","placeholder","aria-label","onChange","target","Button","onClick","Logout","onLogout","logout","LoginOrLogout","Navbar","bg","expand","Container","Brand","href","icon","Toggle","Collapse","Nav","Link","SliderWithTooltip","createSliderWithTooltip","Slider","Device","useParams","setDevice","setTemp","onTemperature","useCallback","newTemperature","updateDeviceTemperature","onDevice","getDevice","min","max","step","defaultValue","onAfterChange","temp_calc","temp_probe","library","add","fas","fab","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f80af41f.chunk.js","sourcesContent":["import React, { createContext, useState, FunctionComponent } from \"react\";\n\ntype User = {\n  uid: string;\n  email: string | null;\n  isAnonymous: boolean;\n};\n\ntype UserContextType = {\n  user: User;\n  setUser: (user: User) => void;\n};\n\nconst anonymousUser = {\n  uid: \"\",\n  email: null,\n  isAnonymous: true,\n};\n\nconst userContextDefault = {\n  user: anonymousUser,\n  setUser: () => {},\n};\n\nconst UserContext = createContext<UserContextType>(userContextDefault);\n\nconst UserContextProvider: FunctionComponent = ({ children }) => {\n  const [user, setUser] = useState<User>(userContextDefault.user);\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport type { User };\nexport { anonymousUser, UserContext, UserContextProvider };\n","import React, { FunctionComponent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Accordion } from \"react-bootstrap\";\nimport { ZoneOverviewType } from \"equation-connect\";\n\ninterface ZoneOverviewProps {\n  zone: ZoneOverviewType;\n}\nconst ZoneOverview: FunctionComponent<ZoneOverviewProps> = ({ zone }) => {\n  const { id, name, type, comfort, eco, temp, power, mode, devices } = zone;\n  const devicesCount = devices ? Object.keys(devices).length : 0;\n  const devicesList = devices\n    ? Object.keys(devices).map((device) => (\n        <li key={device}>\n          <Link to={`/devices/${device}`}>{device}</Link>\n        </li>\n      ))\n    : null;\n  return (\n    <Accordion className=\"mb-3\" defaultActiveKey=\"0\">\n      <Accordion.Item eventKey=\"0\">\n        <Accordion.Header>{name}</Accordion.Header>\n        <Accordion.Body>\n          <ul>\n            <li>id: {id}</li>\n            <li>temp: {temp}&deg;</li>\n            <li>type: {type}</li>\n            <li>comfort: {comfort}&deg;</li>\n            <li>eco: {eco}&deg;</li>\n            <li>temp: {temp}&deg;</li>\n            <li>power: {power.toString()}</li>\n            <li>mode: {mode}</li>\n            <li>devices: {devicesCount}</li>\n            <ul>{devicesList}</ul>\n          </ul>\n        </Accordion.Body>\n      </Accordion.Item>\n      <Accordion.Item eventKey=\"1\">\n        <Accordion.Header>Debug</Accordion.Header>\n        <Accordion.Body>\n          <pre>{JSON.stringify(zone, null, 2)}</pre>\n        </Accordion.Body>\n      </Accordion.Item>\n    </Accordion>\n  );\n};\n\nexport default ZoneOverview;\n","import React, { FunctionComponent } from \"react\";\nimport ZoneOverview from \"./ZoneOverview\";\nimport { ZonesOverviewType } from \"equation-connect\";\n\ninterface ZonesOverviewProps {\n  zones: ZonesOverviewType;\n}\n\nconst ZonesOverview: FunctionComponent<ZonesOverviewProps> = ({ zones }) => (\n  <>\n    {zones &&\n      Object.keys(zones).map((key) => (\n        <ZoneOverview key={key} zone={zones[key]} />\n      ))}\n  </>\n);\n\nexport default ZonesOverview;\n","import React, { FunctionComponent } from \"react\";\nimport { Accordion, Alert } from \"react-bootstrap\";\n// @ts-ignore\nimport ReactWeather, { useOpenWeather } from \"react-open-weather\";\nimport ZonesOverview from \"./ZonesOverview\";\nimport { InstallationType } from \"equation-connect\";\n\ninterface InstallationProps {\n  installation: InstallationType;\n}\n\nconst Installation: FunctionComponent<InstallationProps> = ({\n  installation,\n}) => {\n  const { name, location, latitude, longitude, zones } = installation;\n  const { data, isLoading, errorMessage } = useOpenWeather({\n    key: process.env.REACT_APP_OPEN_WEATHER_API_KEY,\n    lat: latitude.toString(),\n    lon: longitude.toString(),\n    lang: \"en\",\n    unit: \"metric\",\n  });\n  const missingApiKeyMessage = (\n    <Alert variant=\"warning\">\n      REACT_APP_OPEN_WEATHER_API_KEY environment variable missing.\n    </Alert>\n  );\n  return (\n    <div>\n      <Accordion className=\"mb-3\" defaultActiveKey=\"0\">\n        <Accordion.Item eventKey=\"0\">\n          <Accordion.Header>{name}</Accordion.Header>\n          <Accordion.Body>\n            {\"REACT_APP_OPEN_WEATHER_API_KEY\" in process.env ? (\n              <ReactWeather\n                isLoading={isLoading}\n                errorMessage={errorMessage}\n                data={data}\n                lang=\"en\"\n                locationLabel={location}\n                unitsLabels={{ temperature: \"C\", windSpeed: \"Km/h\" }}\n                showForecast\n              />\n            ) : (\n              missingApiKeyMessage\n            )}\n          </Accordion.Body>\n        </Accordion.Item>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>Debug</Accordion.Header>\n          <Accordion.Body>\n            <pre>{JSON.stringify(installation, null, 2)}</pre>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n\n      <ZonesOverview zones={zones} />\n    </div>\n  );\n};\n\nexport default Installation;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { UserContext } from \"../context/provider\";\nimport { InstallationsType, getInstallations } from \"equation-connect\";\nimport Installation from \"./Installation\";\n\nconst Installations = (): JSX.Element => {\n  const [installations, setInstallations] = useState<InstallationsType | null>(\n    null\n  );\n  const { user } = useContext(UserContext);\n\n  useEffect(() => {\n    const fetch = async () => {\n      setInstallations(await getInstallations(user.uid));\n    };\n    fetch();\n  }, [user.uid]);\n\n  return (\n    <div>\n      {installations &&\n        Object.keys(installations).map((key) => (\n          <Installation key={key} installation={installations[key]} />\n        ))}\n    </div>\n  );\n};\n\nexport default Installations;\n","import React, { useContext } from \"react\";\nimport Installations from \"./Installations\";\nimport { UserContext } from \"../context/provider\";\n\nconst Home = (): JSX.Element => {\n  const { user } = useContext(UserContext);\n  return user.isAnonymous ? <div /> : <Installations />;\n};\n\nexport default Home;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { anonymousUser, User, UserContext } from \"../context/provider\";\nimport { login, auth } from \"equation-connect\";\n\nconst Login = (): JSX.Element => {\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const { setUser } = useContext(UserContext);\n\n  useEffect(() => {\n    onAuthStateChanged(auth, (currentUser) => {\n      const user = currentUser === null ? anonymousUser : currentUser;\n      setUser(user);\n    });\n  }, [setUser]);\n\n  const onEmailChange = (e: React.ChangeEvent<HTMLInputElement>) =>\n    setEmail(e.target.value);\n\n  const onPasswordChange = (e: React.ChangeEvent<HTMLInputElement>) =>\n    setPassword(e.target.value);\n\n  const onLogin = async () => {\n    try {\n      const user: User = await login(email, password);\n      setUser(user);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const onLoginClick = (e: React.MouseEvent<HTMLElement>) => onLogin();\n\n  const onFormSubmit = (e: React.FormEvent) => e.preventDefault();\n\n  return (\n    <Form className=\"d-flex\" onSubmit={onFormSubmit}>\n      <Form.Control\n        type=\"email\"\n        placeholder=\"Email\"\n        className=\"me-2\"\n        aria-label=\"Email\"\n        onChange={onEmailChange}\n      />\n      <Form.Control\n        type=\"password\"\n        placeholder=\"Password\"\n        className=\"me-2\"\n        aria-label=\"Password\"\n        onChange={onPasswordChange}\n      />\n      <Button type=\"submit\" onClick={onLoginClick}>\n        Login\n      </Button>\n    </Form>\n  );\n};\n\nexport default Login;\n","import React, { useContext } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { UserContext, anonymousUser } from \"../context/provider\";\nimport { logout } from \"equation-connect\";\n\nconst Logout = (): JSX.Element => {\n  const { setUser } = useContext(UserContext);\n\n  const onLogout = async () => {\n    logout();\n    setUser(anonymousUser);\n  };\n\n  const onLogoutClick = (e: React.MouseEvent<HTMLElement>) => onLogout();\n\n  return (\n    <Button type=\"submit\" onClick={onLogoutClick}>\n      Logout\n    </Button>\n  );\n};\n\nexport default Logout;\n","import React, { useContext } from \"react\";\nimport { UserContext } from \"../context/provider\";\nimport Login from \"./Login\";\nimport Logout from \"./Logout\";\n\nconst LoginOrLogout = (): JSX.Element => {\n  const { user } = useContext(UserContext);\n  return user.isAnonymous ? <Login /> : <Logout />;\n};\n\nexport default LoginOrLogout;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\nimport LoginOrLogout from \"./LoginOrLogout\";\n\nconst Header = (): JSX.Element => (\n  <Navbar bg=\"dark\" variant=\"dark\" expand=\"sm\">\n    <Container>\n      <Navbar.Brand href={process.env.PUBLIC_URL}>\n        <FontAwesomeIcon icon={[\"fas\", \"thermometer-three-quarters\"]} />{\" \"}\n        Equation Connect\n      </Navbar.Brand>\n      <Navbar.Toggle />\n      <Navbar.Collapse>\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"https://github.com/AndreMiras/equation-connect\">\n            <FontAwesomeIcon icon={[\"fab\", \"github-alt\"]} /> About\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n      <LoginOrLogout />\n    </Container>\n  </Navbar>\n);\n\nexport default Header;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Accordion } from \"react-bootstrap\";\nimport Slider, { createSliderWithTooltip } from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\nimport {\n  DeviceType,\n  getDevice,\n  updateDeviceTemperature,\n} from \"equation-connect\";\n\nconst SliderWithTooltip = createSliderWithTooltip(Slider);\n\nconst Device = (): JSX.Element => {\n  const { id } = useParams<\"id\">();\n  const [device, setDevice] = useState<DeviceType | null>(null);\n  const [temp, setTemp] = useState(0);\n  const onTemperature = useCallback(\n    (newTemperature: number) => {\n      if (newTemperature === temp) return;\n      setTemp(newTemperature);\n      updateDeviceTemperature(id!, newTemperature);\n    },\n    [id, temp]\n  );\n  const onDevice = useCallback(\n    (device: DeviceType) => {\n      setDevice(device);\n      onTemperature(device.data.temp);\n    },\n    [onTemperature]\n  );\n\n  useEffect(() => {\n    const fetch = async () => {\n      onDevice(await getDevice(id!));\n    };\n    fetch();\n  }, [onDevice, id]);\n\n  return device === null ? (\n    <div />\n  ) : (\n    <Accordion className=\"mb-3\" defaultActiveKey=\"0\">\n      <Accordion.Item eventKey=\"0\">\n        <Accordion.Header>{device.data.name}</Accordion.Header>\n        <Accordion.Body>\n          <ul>\n            <li>id: {id}</li>\n            <li>\n              temp: {temp}&deg;\n              <SliderWithTooltip\n                min={7}\n                max={30}\n                step={0.5}\n                defaultValue={device.data.temp}\n                onAfterChange={(value) => onTemperature(value)}\n              />\n            </li>\n            <li>temp_calc: {device.data.temp_calc}&deg;</li>\n            <li>temp_probe: {device.data.temp_probe}&deg;</li>\n          </ul>\n        </Accordion.Body>\n      </Accordion.Item>\n      <Accordion.Item eventKey=\"1\">\n        <Accordion.Header>Debug</Accordion.Header>\n        <Accordion.Body>\n          <pre>{JSON.stringify(device, null, 2)}</pre>\n        </Accordion.Body>\n      </Accordion.Item>\n    </Accordion>\n  );\n};\n\nexport default Device;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container } from \"react-bootstrap\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport Home from \"./components/Home\";\nimport Header from \"./components/Header\";\nimport Device from \"./components/Device\";\n\nlibrary.add(fas, fab);\n\nconst App = (): JSX.Element => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Container className=\"mt-3\">\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"devices/:id\" element={<Device />} />\n          </Routes>\n        </Container>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { UserContextProvider } from \"./context/provider\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserContextProvider>\n      <App />\n    </UserContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}