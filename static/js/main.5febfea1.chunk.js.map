{"version":3,"sources":["context/provider.tsx","utils/firebase.ts","components/Installations.tsx","components/Login.tsx","components/Logout.tsx","components/LoginOrLogout.tsx","components/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["anonymousUser","uid","email","isAnonymous","userContextDefault","user","setUser","UserContext","createContext","UserContextProvider","children","useState","Provider","value","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","appId","database","getDatabase","auth","getAuth","login","password","a","signInWithEmailAndPassword","getInstallations","get","query","ref","orderByChild","equalTo","snapshot","installations","val","Installations","setInstallations","useContext","useEffect","fetch","Card","Body","JSON","stringify","Login","setEmail","setPassword","onLogin","console","error","Form","className","onSubmit","e","preventDefault","Control","type","placeholder","aria-label","onChange","target","Button","onClick","Logout","onLogout","signOut","LoginOrLogout","Header","Navbar","bg","variant","expand","Container","Brand","href","process","icon","Toggle","Collapse","Nav","Link","library","add","fas","fab","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5febfea1.chunk.js","sourcesContent":["import React, { createContext, useState, FunctionComponent } from \"react\";\n\ntype User = {\n  uid: string;\n  email: string | null;\n  isAnonymous: boolean;\n};\n\ntype UserContextType = {\n  user: User;\n  setUser: (user: User) => void;\n};\n\nconst anonymousUser = {\n  uid: \"\",\n  email: null,\n  isAnonymous: true,\n};\n\nconst userContextDefault = {\n  user: anonymousUser,\n  setUser: () => {},\n};\n\nconst UserContext = createContext<UserContextType>(userContextDefault);\n\nconst UserContextProvider: FunctionComponent = ({ children }) => {\n  const [user, setUser] = useState<User>(userContextDefault.user);\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport type { User };\nexport { anonymousUser, UserContext, UserContextProvider };\n","import { initializeApp } from \"firebase/app\";\nimport {\n  child,\n  equalTo,\n  get,\n  getDatabase,\n  query,\n  orderByChild,\n  ref,\n} from \"firebase/database\";\nimport { getAuth, signInWithEmailAndPassword, signOut } from \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDfqBq3AfIg1wPjuHse3eiXqeDIxnhvp6U\",\n  authDomain: \"oem1-elife-cloud-prod.firebaseapp.com\",\n  databaseURL: \"https://oem2-elife-cloud-prod-default-rtdb.firebaseio.com\",\n  projectId: \"oem2-elife-cloud-prod\",\n  storageBucket: \"oem2-elife-cloud-prod.appspot.com\",\n  appId: \"1:150904115315:android:03aeef2c831bbda0061a06\",\n};\n\n// TODO: do not init at import time, but at first usage e.g. with a singleton\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase();\nconst auth = getAuth(app);\n\nconst login = async (email: string, password: string) => {\n  const { user } = await signInWithEmailAndPassword(auth, email, password);\n  return user;\n};\n\nconst logout = () => signOut(auth);\n\nconst getUser = async (uid: string) => {\n  const path = `users/${uid}`;\n  const snapshot = await get(child(ref(database), path));\n  const user = snapshot.val();\n  return user;\n};\n\nconst getInstallations = async (uid: string) => {\n  const path = \"installations2\";\n  const snapshot = await get(\n    query(ref(database, path), orderByChild(\"userid\"), equalTo(uid))\n  );\n  const installations = snapshot.val();\n  return installations;\n};\n\nexport { login, logout, getInstallations, getUser };\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { UserContext } from \"../context/provider\";\nimport { getInstallations } from \"../utils/firebase\";\n\nconst Installations = (): JSX.Element => {\n  const [installations, setInstallations] = useState();\n  const { user } = useContext(UserContext);\n\n  useEffect(() => {\n    const fetch = async () => {\n      setInstallations(await getInstallations(user.uid));\n    };\n    fetch();\n  }, [user.uid]);\n\n  return (\n    <div>\n      <h2>Installations</h2>\n      <Card>\n        <Card.Body>\n          <pre>{JSON.stringify(installations, null, 2)}</pre>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default Installations;\n","import React, { useContext, useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { User, UserContext } from \"../context/provider\";\nimport { login } from \"../utils/firebase\";\n\nconst Login = (): JSX.Element => {\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const { setUser } = useContext(UserContext);\n\n  const onEmailChange = (e: React.ChangeEvent<HTMLInputElement>) =>\n    setEmail(e.target.value);\n\n  const onPasswordChange = (e: React.ChangeEvent<HTMLInputElement>) =>\n    setPassword(e.target.value);\n\n  const onLogin = async () => {\n    try {\n      const user: User = await login(email, password);\n      setUser(user);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const onLoginClick = (e: React.MouseEvent<HTMLElement>) => onLogin();\n\n  const onFormSubmit = (e: React.FormEvent) => e.preventDefault();\n\n  return (\n    <Form className=\"d-flex\" onSubmit={onFormSubmit}>\n      <Form.Control\n        type=\"email\"\n        placeholder=\"Email\"\n        className=\"me-2\"\n        aria-label=\"Email\"\n        onChange={onEmailChange}\n      />\n      <Form.Control\n        type=\"password\"\n        placeholder=\"Password\"\n        className=\"me-2\"\n        aria-label=\"Password\"\n        onChange={onPasswordChange}\n      />\n      <Button type=\"submit\" onClick={onLoginClick}>\n        Login\n      </Button>\n    </Form>\n  );\n};\n\nexport default Login;\n","import React, { useContext } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { UserContext, anonymousUser } from \"../context/provider\";\nimport { logout } from \"../utils/firebase\";\n\nconst Logout = (): JSX.Element => {\n  const { setUser } = useContext(UserContext);\n\n  const onLogout = async () => {\n    logout();\n    setUser(anonymousUser);\n  };\n\n  const onLogoutClick = (e: React.MouseEvent<HTMLElement>) => onLogout();\n\n  return (\n    <Button type=\"submit\" onClick={onLogoutClick}>\n      Logout\n    </Button>\n  );\n};\n\nexport default Logout;\n","import React, { useContext } from \"react\";\nimport { UserContext } from \"../context/provider\";\nimport Login from \"./Login\";\nimport Logout from \"./Logout\";\n\nconst LoginOrLogout = (): JSX.Element => {\n  const { user } = useContext(UserContext);\n  return user.isAnonymous ? <Login /> : <Logout />;\n};\n\nexport default LoginOrLogout;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\nimport LoginOrLogout from \"./LoginOrLogout\";\n\nconst Header = (): JSX.Element => (\n  <Navbar bg=\"dark\" variant=\"dark\" expand=\"sm\">\n    <Container>\n      <Navbar.Brand href={process.env.PUBLIC_URL}>\n        <FontAwesomeIcon icon={[\"fas\", \"thermometer-three-quarters\"]} />{\" \"}\n        Equation Connect\n      </Navbar.Brand>\n      <Navbar.Toggle />\n      <Navbar.Collapse>\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"https://github.com/AndreMiras/equation-connect\">\n            <FontAwesomeIcon icon={[\"fab\", \"github-alt\"]} /> About\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n      <LoginOrLogout />\n    </Container>\n  </Navbar>\n);\n\nexport default Header;\n","import React, { useContext } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container } from \"react-bootstrap\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport Installations from \"./components/Installations\";\nimport Header from \"./components/Header\";\nimport { UserContext } from \"./context/provider\";\n\nlibrary.add(fas, fab);\n\nconst App = (): JSX.Element => {\n  const { user } = useContext(UserContext);\n  return (\n    <div className=\"App\">\n      <Header />\n      <Container>{user.isAnonymous ? null : <Installations />}</Container>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { UserContextProvider } from \"./context/provider\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserContextProvider>\n      <App />\n    </UserContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}