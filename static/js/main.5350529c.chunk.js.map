{"version":3,"sources":["utils/firebase.ts","components/Login.tsx","components/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","appId","auth","getAuth","login","email","password","a","console","log","signInWithEmailAndPassword","userCredential","Login","useState","setEmail","setPassword","onLogin","user","error","Form","className","onSubmit","e","preventDefault","Control","type","placeholder","aria-label","onChange","target","value","Button","onClick","Header","Navbar","bg","variant","expand","Container","Brand","href","process","icon","Toggle","Collapse","Nav","Link","library","add","fas","fab","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAaMA,EAAMC,YAVW,CACrBC,OAAQ,0CACRC,WAAY,wCACZC,YAAa,4DACbC,UAAW,wBACXC,cAAe,oCACfC,MAAO,kDAKHC,EAAOC,YAAQT,GAEfU,EAAK,uCAAG,WAAOC,EAAeC,GAAtB,eAAAC,EAAA,6DACZC,QAAQC,IAAI,SAAUJ,GACtBG,QAAQC,IAAI,YAAaH,GAFb,SAGiBI,YAC3BR,EACAG,EACAC,GANU,cAGNK,EAHM,yBAQLA,GARK,2CAAH,wD,OCkCIC,EA9CD,WAAoB,IAAD,EACLC,mBAAiB,IADZ,mBACxBR,EADwB,KACjBS,EADiB,OAECD,mBAAiB,IAFlB,mBAExBP,EAFwB,KAEdS,EAFc,KAUzBC,EAAO,uCAAG,4BAAAT,EAAA,+EAEOH,EAAMC,EAAOC,GAFpB,OAENW,EAFM,OAGZT,QAAQC,IAAI,QAASQ,GAHT,gDAKZT,QAAQU,MAAR,MALY,yDAAH,qDAab,OACE,eAACC,EAAA,EAAD,CAAMC,UAAU,SAASC,SAHN,SAACC,GAAD,OAAwBA,EAAEC,kBAG7C,UACE,cAACJ,EAAA,EAAKK,QAAN,CACEC,KAAK,QACLC,YAAY,QACZN,UAAU,OACVO,aAAW,QACXC,SA1BgB,SAACN,GAAD,OACpBR,EAASQ,EAAEO,OAAOC,UA2BhB,cAACX,EAAA,EAAKK,QAAN,CACEC,KAAK,WACLC,YAAY,WACZN,UAAU,OACVO,aAAW,WACXC,SA9BmB,SAACN,GAAD,OACvBP,EAAYO,EAAEO,OAAOC,UA+BnB,cAACC,EAAA,EAAD,CAAQN,KAAK,SAASO,QApBL,SAACV,GAAD,OAAsCN,KAoBvD,uBClBSiB,EApBA,kBACb,cAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,KAAxC,SACE,eAACC,EAAA,EAAD,WACE,eAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAMC,oBAApB,UACE,cAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,gCAAkC,IADnE,sBAIA,cAACR,EAAA,EAAOS,OAAR,IACA,cAACT,EAAA,EAAOU,SAAR,UACE,cAACC,EAAA,EAAD,CAAKzB,UAAU,UAAf,SACE,eAACyB,EAAA,EAAIC,KAAL,CAAUN,KAAK,iDAAf,UACE,cAAC,IAAD,CAAiBE,KAAM,CAAC,MAAO,gBADjC,gBAKJ,cAAC,EAAD,UCbNK,IAAQC,IAAIC,IAAKC,KAEjB,IAMeC,EANH,kBACV,qBAAK/B,UAAU,MAAf,SACE,cAAC,EAAD,OCGWgC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5350529c.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDfqBq3AfIg1wPjuHse3eiXqeDIxnhvp6U\",\n  authDomain: \"oem1-elife-cloud-prod.firebaseapp.com\",\n  databaseURL: \"https://oem2-elife-cloud-prod-default-rtdb.firebaseio.com\",\n  projectId: \"oem2-elife-cloud-prod\",\n  storageBucket: \"oem2-elife-cloud-prod.appspot.com\",\n  appId: \"1:150904115315:android:03aeef2c831bbda0061a06\",\n};\n\n// TODO: do not init at import time, but at first usage e.g. with a singleton\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\n\nconst login = async (email: string, password: string) => {\n  console.log(\"email:\", email);\n  console.log(\"password:\", password);\n  const userCredential = await signInWithEmailAndPassword(\n    auth,\n    email,\n    password\n  );\n  return userCredential;\n};\n\nexport { login };\n","import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { login } from \"../utils/firebase\";\n\nconst Login = (): JSX.Element => {\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n\n  const onEmailChange = (e: React.ChangeEvent<HTMLInputElement>) =>\n    setEmail(e.target.value);\n\n  const onPasswordChange = (e: React.ChangeEvent<HTMLInputElement>) =>\n    setPassword(e.target.value);\n\n  const onLogin = async () => {\n    try {\n      const user = await login(email, password);\n      console.log(\"user:\", user);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const onLoginClick = (e: React.MouseEvent<HTMLElement>) => onLogin();\n\n  const onFormSubmit = (e: React.FormEvent) => e.preventDefault();\n\n  return (\n    <Form className=\"d-flex\" onSubmit={onFormSubmit}>\n      <Form.Control\n        type=\"email\"\n        placeholder=\"Email\"\n        className=\"me-2\"\n        aria-label=\"Email\"\n        onChange={onEmailChange}\n      />\n      <Form.Control\n        type=\"password\"\n        placeholder=\"Password\"\n        className=\"me-2\"\n        aria-label=\"Password\"\n        onChange={onPasswordChange}\n      />\n      <Button type=\"submit\" onClick={onLoginClick}>\n        Login\n      </Button>\n    </Form>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\nimport Login from \"./Login\";\n\nconst Header = (): JSX.Element => (\n  <Navbar bg=\"dark\" variant=\"dark\" expand=\"sm\">\n    <Container>\n      <Navbar.Brand href={process.env.PUBLIC_URL}>\n        <FontAwesomeIcon icon={[\"fas\", \"thermometer-three-quarters\"]} />{\" \"}\n        Equation Connect\n      </Navbar.Brand>\n      <Navbar.Toggle />\n      <Navbar.Collapse>\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"https://github.com/AndreMiras/equation-connect\">\n            <FontAwesomeIcon icon={[\"fab\", \"github-alt\"]} /> About\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n      <Login />\n    </Container>\n  </Navbar>\n);\n\nexport default Header;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport Header from \"./components/Header\";\n\nlibrary.add(fas, fab);\n\nconst App = (): JSX.Element => (\n  <div className=\"App\">\n    <Header />\n  </div>\n);\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}